{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","About","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5752c773.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ? \r\n                    (contact = action.payload) : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState (state => \r\n        reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\n// import './Contact.css';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch (e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n       \r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"contact-box card card-body mb3\">\r\n                            <h4>{name} {' '}\r\n                                <i onClick={()=>\r\n                                    this.setState({ showContactInfo: \r\n                                    !this.state.showContactInfo })\r\n                                } \r\n                                    className=\"fas fa-sort-down\" \r\n                                    style={{cursor:'pointer'}}\r\n                                />\r\n                                {/* <i className=\"fas fa-edit\" \r\n                                    style={{ cursor: 'pointer', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind (this, id, dispatch)\r\n                                    }\r\n                                /> */}\r\n                                <i className=\"fas fa-times\" \r\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind (this, id, dispatch)\r\n                                    }\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                    style={{ cursor: 'pointer',\r\n                                    float: 'right', color: 'black',\r\n                                    marginRight: '1rem'\r\n                                    }}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n        // return React.createElement (\r\n        //     'div',\r\n        //     { className: 'myDiv'},\r\n        //     React.createElement (\r\n        //         'h4',\r\n        //         null,\r\n        //         'John Doe',\r\n        //     ),\r\n        //     React.createElement (\r\n        //         'ul',\r\n        //         null,\r\n        //         React.createElement (\r\n        //             'li',\r\n        //             null,\r\n        //             'Email:jdoe@gmail.com',\r\n        //         ),\r\n        //         React.createElement (\r\n        //             'li',\r\n        //             null,\r\n        //             'Phone: 333-444-5555',\r\n        //         )\r\n        //     )\r\n        // )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} \r\n                                contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\" >\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\"> \r\n                    { branding } \r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"> </i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"> </i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"> </i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nHeader.defaultProps  = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//     color:'green',\r\n//     fontSize: '32px'\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange, \r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label} </label>\r\n            <input \r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">\r\n                {error}</div>}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport {v1 as uuid} from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nimport './Contact.css';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // check for errors\r\n\r\n        if (name === ''){\r\n            this.setState({errors: { name: 'Name is required' }});\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors: { email: 'Email is required' }});\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors: { phone: 'Phone is required' }});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n        \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name] : e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\" >\r\n                            <div className =\"card-header\">Add Contact</div>\r\n                            <div className =\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind \r\n                                    \r\n                                    (this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value =\"Add contact\" \r\n                                    className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nimport './Contact.css';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // check for errors\r\n        if (name === ''){\r\n            this.setState({errors: { name: 'Name is required' }});\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors: { email: 'Email is required' }});\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors: { phone: 'Phone is required' }});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        \r\n        dispatch ({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    onChange = e => this.setState({[e.target.name] : e.target.value });\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\" >\r\n                            <div className =\"card-header\">Edit Contact</div>\r\n                            <div className =\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind \r\n                                    \r\n                                    (this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup \r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value =\"Update contact\" \r\n                                    className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        title: data.title,\r\n        body: data.body\r\n      }))\r\n  }\r\n  // componentWillMount(){\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n  // componentDidUpdate(){\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n  // componentWillUpdate(){\r\n  //   console.log('componentWillUpdate...');\r\n  // }\r\n  // componentWillReceiveProps(nextProps, nextState){\r\n  //   console.log('componentWillReceiveProps...');\r\n  // }\r\n  // static getDerivedStateFromProps(nextProps, prevState){\r\n  //   return {\r\n  //     test: 'something'\r\n  //   };\r\n  // }\r\n  // getSnapshotBeforeUpdate(prevProps, prevState){\r\n  //   console.log('getSnapshotBeforeUpdate...');\r\n  // }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}